version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - symfony_network

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html/src
    environment:
      - APP_ENV=dev
      - DATABASE_URL=postgresql://symfony:symfony@database:5432/symfony?serverVersion=15&charset=utf8
    networks:
      - symfony_network

  nginx:
    image: nginx:alpine
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - symfony_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`symfony.localhost`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

  node:
    image: node:20-alpine
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html/src
    ports:
      - "5174:5173"
    command: sh -c "npm install && npm run dev"
    networks:
      - symfony_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vite.rule=Host(`symfony.localhost`) && PathPrefix(`/build`)"
      - "traefik.http.services.vite.loadbalancer.server.port=5173"

  database:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: symfony
      POSTGRES_USER: symfony
      POSTGRES_PASSWORD: symfony
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - symfony_network

  adminer:
    image: adminer
    networks:
      - symfony_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.symfony.localhost`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"

networks:
  symfony_network:
    driver: bridge

volumes:
  database_data:
